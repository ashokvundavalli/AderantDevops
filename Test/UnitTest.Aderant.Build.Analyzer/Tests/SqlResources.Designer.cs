//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTest.Aderant.Build.Analyzer.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UnitTest.Aderant.Build.Analyzer.Tests.SqlResources", typeof(SqlResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Data;
        ///using System.Data.SqlClient;
        ///using System.Linq;
        ///
        ///namespace Test
        ///{
        ///    public class Literal_string_passed_to_function
        ///    {
        ///        private static bool CheckColumnExpertFileNameForBill()
        ///        {
        ///            var exists = false;
        ///            WorkWithReader(
        ///                &quot;select * from[dbo].[TBM_FMT_BL]&quot;,
        ///                reader =&gt; exists = Enumerable.Range(0, reader.FieldCount).Select(reader.GetName).Contains(&quot;EXPERT_FILENAME&quot;)
        ///            );
        ///            retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Literal_string_passed_to_function {
            get {
                return ResourceManager.GetString("Literal_string_passed_to_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Data;
        ///using System.Data.SqlClient;
        ///using System.Linq;
        ///
        ///namespace Test
        ///{
        ///    public class Mutable_string_passed_to_function
        ///    {
        ///
        ///        private static string table;
        ///
        ///        private static bool CheckColumnExpertFileNameForBill()
        ///        {
        ///            var exists = false;
        ///            WorkWithReader(&quot;select * from[dbo].&quot; + table);
        ///            return exists;
        ///        }
        ///
        ///        public static void WorkWithReader(string query)
        ///        {
        ///            using (var conne [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Mutable_string_passed_to_function {
            get {
                return ResourceManager.GetString("Mutable_string_passed_to_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Data;
        ///using System.Data.SqlClient;
        ///using System.Linq;
        ///
        ///namespace Test {
        ///    public class Mutable_string_passed_to_function_with_parameters {
        ///
        ///        private static string table;
        ///
        ///        private static bool CheckColumnExpertFileNameForBill() {
        ///            var exists = false;
        ///            WorkWithReader(&quot;select * from[dbo].&quot; + table, &quot;p1&quot;);
        ///            return exists;
        ///        }
        ///
        ///        public static void WorkWithReader(string query, string parameter) {
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Mutable_string_passed_to_function_with_parameters {
            get {
                return ResourceManager.GetString("Mutable_string_passed_to_function_with_parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Data;
        ///using System.Data.SqlClient;
        ///
        ///namespace Test
        ///{
        ///    public class SqlCommand_using_ctor_and_sp_executesql_reports_no_diagnostic
        ///    {
        ///
        ///        private string myVariable = null;
        ///
        ///        internal string TestProp
        ///        {
        ///            get
        ///            {
        ///                if (true)
        ///                {
        ///                    var commandText = &quot;abc&quot; + myVariable;
        ///                    using (var connection = new SqlConnection(&quot;SomeConnectionString&quot;))
        ///                    {
        ///               [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlCommand_using_ctor_and_sp_executesql_reports_no_diagnostic {
            get {
                return ResourceManager.GetString("SqlCommand_using_ctor_and_sp_executesql_reports_no_diagnostic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Data;
        ///using System.Data.SqlClient;
        ///
        ///namespace Test {
        ///    public class SqlCommand_using_sp_executesql_parameter_add_reports_no_diagnostic {
        ///
        ///        private string myVariable = null;
        ///
        ///        public void Foo() {
        ///            var commandText = &quot;abc&quot; + myVariable;
        ///            using (var connection = new SqlConnection(&quot;SomeConnectionString&quot;)) {
        ///                using (var command = connection.CreateCommand()) {
        ///                    command.CommandText = commandText;
        ///                    va [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlCommand_using_sp_executesql_parameter_add_reports_no_diagnostic {
            get {
                return ResourceManager.GetString("SqlCommand_using_sp_executesql_parameter_add_reports_no_diagnostic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Data;
        ///using System.Data.SqlClient;
        ///
        ///namespace Test {
        ///    public class SqlCommand_using_sp_executesql_reports_no_diagnostic {
        ///
        ///        private string myVariable = null;
        ///
        ///        internal string TestProp {
        ///            get {
        ///                if (true) {
        ///                    var commandText = &quot;abc&quot; + myVariable;
        ///                    using (var connection = new SqlConnection(&quot;SomeConnectionString&quot;)) {
        ///                        using (var command = connection.CreateCommand()) {
        ///              [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlCommand_using_sp_executesql_parameter_insert_reports_no_diagnostic {
            get {
                return ResourceManager.GetString("SqlCommand_using_sp_executesql_parameter_insert_reports_no_diagnostic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Data;
        ///using System.Data.SqlClient;
        ///
        ///namespace Test {
        ///    public class SqlCommand_using_sp_executesql_parameter_insert_reports_no_diagnostic {
        ///
        ///        private string myVariable = null;
        ///
        ///        internal string TestProp {
        ///            get {
        ///                if (true) {
        ///                    var commandText = &quot;abc&quot; + myVariable;
        ///                    using (var connection = new SqlConnection(&quot;SomeConnectionString&quot;)) {
        ///                        using (var command = connection.CreateCommand()) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlCommand_using_sp_executesql_reports_no_diagnostic {
            get {
                return ResourceManager.GetString("SqlCommand_using_sp_executesql_reports_no_diagnostic", resourceCulture);
            }
        }
    }
}
