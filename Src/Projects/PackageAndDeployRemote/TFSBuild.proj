<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="DesktopBuild"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
    ToolsVersion="4.0">

  <!-- 
    =========================================================================================================
        Team Build Script - Workflow Prototype                                                 
        
        Maintained by Global DBA And Release Management.  DBARM monitors and approves all modifications.  
        Guidelines:
            * All Imports, Calls to external commands/tasks/$(BuildNumber)/utilities must be approved by DBARM  
            * Retain structure and formatting for easier merge between Team Build project scripts 
            * Tabs converted to 4 spaces for easier reading outside of VS.
    =========================================================================================================
    -->

  <ProjectExtensions>
    <ProjectFileVersion>2</ProjectFileVersion>
  </ProjectExtensions>

  <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\TeamBuild\Microsoft.TeamFoundation.Build.targets" />
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>

    <!-- Targets file has to be on the drop, as MSBuild pares this file bofore getting the workspace.-->
    <Import Project="\\na.aderant.com\expertsuite\Main\Build.Infrastructure\Src\Package\PackageTargets.proj"/>
  <!--
    ==========================================================================================
        Begin
    ==========================================================================================
  -->

  <PropertyGroup>
    <OnBuildBreakDependsOn>
      BeforeOnBuildBreak;
      GetChangeSetsOnBuildBreak;
      DropBuild;
      AfterOnBuildBreak;
    </OnBuildBreakDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <RunTest>true</RunTest>
    <RunCodeAnalysis>Never</RunCodeAnalysis>
    <SolutionDirectoryPath>$(SolutionRoot)</SolutionDirectoryPath>
    <TreatTestFailureAsBuildFailure>true</TreatTestFailureAsBuildFailure>
    <FrameworkHomeEnvVariable>FrameworkHome</FrameworkHomeEnvVariable>     
  </PropertyGroup>

  <!-- 
    ==========================================================================================
        Build Configurations
    ==========================================================================================
    -->
  <ItemGroup>
    <ConfigurationToBuild
        Condition="'$(BuildFlavor)'=='Release'"
		    Include="Release|Any CPU">
      <FlavorToBuild>Release</FlavorToBuild>
      <PlatformToBuild>Any CPU</PlatformToBuild>
    </ConfigurationToBuild>
  </ItemGroup>

  <Target
      Name="OnBuildBreak"
      Condition="('$(IsDesktopBuild)'!='true')"
      DependsOnTargets="$(OnBuildBreakDependsOn)"
        >
  </Target>

  <Target Name="AfterCompile">
    <CallTarget Targets="AutomatedTestingTargets" />
  </Target>


  <!--
    ==========================================================================================
        Automated Testing Targets
    ==========================================================================================
  -->

  <Target Name="AutomatedTestingTargets">
    <CallTarget Targets="RemoveProductRemote" />
    <CallTarget Targets="RestoreDB" />
    <CallTarget Targets="PackageProduct" Condition="('$(UseBuildAllOutput)'!='true')" />
    <CallTarget Targets="GetProductZip" Condition="('$(UseBuildAllOutput)'=='true')"/>
    <CallTarget Targets="ApplyUPD" />
    <CallTarget Targets="DeployProductRemote" />
    <CallTarget Targets="WaitForServiceStartUp" />
  </Target>  


</Project>
