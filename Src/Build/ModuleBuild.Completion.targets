<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="AfterModuleBuild"
  ToolsVersion="14.0">

  <Import Project="Aderant.Build.Common.targets" />
  <Import Project="Aderant.Build.Testing.targets" />
  <Import Project="Aderant.Build.IntegrationTesting.targets" />
  <Import Project="Aderant.Build.CopyToDropV2.targets" />

  <PropertyGroup>
    <BinModuleDirectory>$(SolutionDirectoryPath)Bin\Module\</BinModuleDirectory>
    <BinTestDirectory>$(SolutionDirectoryPath)Bin\Test\</BinTestDirectory>
    <CopyToDropV2>true</CopyToDropV2>
  </PropertyGroup>

  <UsingTask TaskName="Aderant.Build.Tasks.GetAssemblyPlatform"
    AssemblyFile="$(BuildAssembly)"
    Condition="'$(IsCustomBuild)' != 'true'" />

  <!--
    ==========================================================================================
        Test Configuration
    ==========================================================================================
  -->
  <PropertyGroup>
    <RunTestsDependsOn>
      $(RunTestsDependsOn);
      BeforeRunTests;
    </RunTestsDependsOn>
  </PropertyGroup>

  <Target Name="BeforeRunTests">

    <ItemGroup>
      <TestAssemblies Include="$(BinTestDirectory)*UnitTest*.dll;
          $(BinTestDirectory)*.Tests.ps1;"
        Exclude="$(BinTestDirectory)*Helpers*.dll;
          $(BinTestDirectory)Microsoft.*" />
      <IntegrationTestAssemblies Include="$(BinTestDirectory)*IntegrationTest*.dll" />
    </ItemGroup>

    <ItemGroup>
      <AssembliesToAnalyze Include="@(ModuleBuildOutput)" Condition="'%(ModuleBuildOutput.OutputType)' == 'Module'" />
      <AssembliesToAnalyze Include="@(BuildOutput)" />
    </ItemGroup>

    <!-- Determine if we can run the tests using the 64-bit test runner -->
    <GetAssemblyPlatform
      Condition="'$(Use32BitTestRunner)' == ''"
      Assemblies="@(AssembliesToAnalyze)">
      <Output ItemName="AssemblyList" TaskParameter="Assemblies" />
      <Output PropertyName="Use32BitTestRunner" TaskParameter="MustRun32Bit" />
    </GetAssemblyPlatform>

    <Message Text="Assembly: %(AssemblyList.FileName) [Platform: %(AssemblyList.Platform)]" Condition="'@(AssemblyList)' != ''" />

    <!-- 
      This section creates a .dll.config for each unit test assembly. The dll.config contains a probing path override 
      which includes two additional folders "ModuleBin" and "Dependencies". This is so unit tests can find dependencies
      without relying on copy local having deployed assemblies to the test directory.
    -->
    <PropertyGroup>
      <UnitTestAppConfigText>$([System.IO.File]::ReadAllText('$(BuildScriptsDirectory)UnitTestAppConfig.txt'))</UnitTestAppConfigText>
    </PropertyGroup>

    <ItemGroup>
      <TestAssemblyConfigFiles Include="@(TestAssemblies->'$(BinTestDirectory)%(RecursiveDir)%(Filename)%(Extension).config')" />
    </ItemGroup>

    <Touch Condition="!Exists(%(TestAssemblyConfigFiles.FullPath))"
      Files="%(TestAssemblyConfigFiles.FullPath)"
      AlwaysCreate="true">
      <Output TaskParameter="TouchedFiles" ItemName="TouchedFiles" />
    </Touch>

    <ItemGroup>
      <XmlLinesToWrite Include="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;" />
      <XmlLinesToWrite Include="&lt;configuration /&gt;" />
    </ItemGroup>

    <WriteLinesToFile Condition="'@(TouchedFiles)' != ''"
      File="%(TouchedFiles.FullPath)"
      Lines="@(XmlLinesToWrite)"
      Encoding="UTF-8" />

    <Error Condition="'$(UnitTestAppConfigText)' == ''" Text="No unit test app.config text defined!" />

    <XDocumentPoke Condition="Exists(%(TestAssemblyConfigFiles.FullPath))"
      File="%(TestAssemblyConfigFiles.FullPath)"
      Query="configuration/runtime"
      Value="$(UnitTestAppConfigText)" />

    <MakeSymlink Condition="'@(TestAssemblies)' != '' And Exists('$(DependenciesDirectory)')"
      Link="$(BinTestDirectory)Dependencies"
      Target="$(DependenciesDirectory)" />

    <MakeSymlink Condition="'@(TestAssemblies)' != '' And '$(IsWebModule)' != 'true'"
      Link="$(BinTestDirectory)ModuleBin"
      Target="$(BinModuleDirectory)" />
  </Target>


  <Target Name="AfterModuleBuild">
      <MSBuild Projects="@(ProjectsToBuild)"
        Targets="Build"
        BuildInParallel="true"
        Properties="%(ProjectsToBuild.Properties)" />

  </Target>


  <Target Name="Build" DependsOnTargets="$(RunTestsDependsOn)">
      <Message Text="
╔═════════════════════════════════════════════════════════════════════╗
║                 Unit Testing:    $(ModuleName.PadRight(26))         ║
╚═════════════════════════════════════════════════════════════════════╝
" Importance="high" />

    <CallTarget Targets="RunTests" />
  </Target>

  <Target Name="AfterRunTests" AfterTargets="RunTests">
    <CallTarget Targets="CopyToDropV2" />
    <CallTarget Targets="FinalizeBuild" />
  </Target>

</Project>
