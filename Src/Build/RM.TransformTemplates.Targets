<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">

  <!--
    ***********************************************************************
    ***  RM.TransformTemplates.Targets                                  ***
    ***  Please retain formatting, one attribute per line, and split    ***
    ***  delimited values over several lines.                           ***
    ***********************************************************************
  -->

  <Target Name="rmBeforeTransformTemplates">
    <!--  Example:
        <CreateProperty Value="$(AderantDependencies)\ExpertFramework;
                               $(AderantDependencies)\FileOpening;">
            <Output TaskParameter="Value" PropertyName="rmT4AssemblyReferencePaths"/>
        </CreateProperty>
        <CreateItem Include="$(SolutionRoot)\TimeEntryService\**\*.tt"
                    AdditionalMetadata="Generator=TextTemplatingFileGenerator">
            <Output TaskParameter="Include" ItemName="rmT4TextTemplates" />
        </CreateItem>
    -->
  </Target>


  <PropertyGroup>
    <TransformTaskDirectory Condition="'$(ExpertSourceDirectory)' == ''">$(SolutionDirectoryPath)Dependencies\</TransformTaskDirectory>
    <TransformTaskDirectory Condition="'$(ExpertSourceDirectory)' != ''">$(ExpertSourceDirectory)</TransformTaskDirectory>

    <rmT4TemplateIncludeFolders Condition="('$(rmT4TemplateIncludeFolders)'=='')">$(SolutionDirectoryPath)Dependencies</rmT4TemplateIncludeFolders>

    <rmTransformTemplatesWorkerDependsOn>
      rmBeforeTransformTemplates;
      rmT4AssemblyReferencePaths;
      rmT4DslDirectiveProcessors;
      BindTransformTask;
    </rmTransformTemplatesWorkerDependsOn>

    <TransformTask Condition="'$(TransformTask)' == ''">$(TEMP)\$(TemporaryDirectoryKey)\TransformTask.dll</TransformTask>
  </PropertyGroup>


  <Target Name="BindTransformTask">
    <!-- We cannot statically determine which transform task exists so we have this lovely trampoline function -->
    <ItemGroup>
      <!--<_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v16.0.dll" />-->
      <_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v15.0.dll" />
      <_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v14.0.dll" />
      <_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v12.0.dll" />

      <TransformTask Include="@(_TransformTask)" Condition="Exists('%(_TransformTask.FullPath)')" />
    </ItemGroup>

    <PropertyGroup>
      <TransformTaskFile>@(TransformTask)</TransformTaskFile>
      <TransformTaskFile>$(TransformTaskFile.Split(';')[0])</TransformTaskFile>
    </PropertyGroup>

    <Copy Condition="!Exists('$(TransformTask)')"
          SkipUnchangedFiles="true"
          SourceFiles="$(TransformTaskFile)"
          DestinationFiles="$(TransformTask)" />

    <LoadAssembly AssemblyFile="$(TransformTaskDirectory)Aderant.TextTransform.Core.dll" />

  </Target>

  <UsingTask AssemblyFile="$(TransformTask)" TaskName="Aderant.TextTransform.Tasks.Transform" />

  <!--
    *************************************************************************************************************
      This target is called to transform all templates in the solution
    *************************************************************************************************************
    -->
  <Target Name="rmTransformTemplates"
          DependsOnTargets="$(rmTransformTemplatesDependsOn)">
    <CallTarget Targets="rmTransformTemplatesWorker" />
  </Target>

  <Target Name="rmTransformTemplatesWorker"
          Condition="('$(rmBCItemTransformTemplatesEnabled)'=='true')"
          DependsOnTargets="$(rmTransformTemplatesWorkerDependsOn)">

    <Error
      Condition="('$(rmT4AssemblyReferencePaths)'=='')"
      Text="Missing required property 'rmT4AssemblyReferencePaths'" />
    <Error
      Condition="('@(rmT4DslDirectiveProcessors)'=='')"
      Text="Missing required item group 'rmT4DslDirectiveProcessors'" />
    <Error
      Condition="('@(rmT4TextTemplates)'=='') And ('$(IsCustomBuild)' != 'true')"
      Text="Missing required item group 'rmT4TextTemplates'" />

    <Message Text="rmT4DslDirectiveProcessors" />
    <Message Text="Processor --> %(Identity) %(rmT4DslDirectiveProcessors.CodeBase)" />

    <Message
      Text="
rmT4AssemblyReferencePaths&#xA;$(rmT4AssemblyReferencePaths)&#xA;
rmT4TemplateIncludeFolders&#xA;$(rmT4TemplateIncludeFolders)
"/>

    <ItemGroup>
      <rmT4TransformItems Include="@(rmT4TextTemplates);" />
      <AssemblyReferencePaths Include="$(rmT4AssemblyReferencePaths)" />
      <TemplateIncludeFolders Include="$(rmT4TemplateIncludeFolders)" />
    </ItemGroup>

    <LoadAssembly AssemblyFile="%(TextTemplatingBuildTasks.FullPath)" />

    <ItemGroup>
      <SearchPaths Include="$(AlternativeOutputDirectory)" />
      <SearchPaths Include="$(ExpertSourceDirectory)" />
    </ItemGroup>

    <PropertyGroup>
      <EnvironmentVariableProperties Condition="'$(EnvironmentVariableProperties)' == ''">ExpertSourceDirectory=$(ExpertSourceDirectory);ArtifactStaging=$(AlternativeOutputDirectory)</EnvironmentVariableProperties>

      <!--Directory into which .tlog files will be written.-->
      <TrackerLogDirectory Condition=" '$(TrackerLogDirectory)' =='' ">$(ModuleBuildTempDirectory)t4\</TrackerLogDirectory>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsDesktopBuild)' == 'true'">
      <!--Indicates whether only out of date templates should be transformed, or whether all templates should be transformed.-->
      <TransformOutOfDateOnly Condition=" '$(TransformOutOfDateOnly)' == '' ">true</TransformOutOfDateOnly>
      <TrackFileAccess Condition=" '$(TrackFileAccess)' =='' ">true</TrackFileAccess>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsDesktopBuild)' != 'true'">
      <TransformOutOfDateOnly Condition=" '$(TransformOutOfDateOnly)' == '' ">false</TransformOutOfDateOnly>
      <TrackFileAccess Condition=" '$(TrackFileAccess)' =='' ">false</TrackFileAccess>
    </PropertyGroup>

    <!-- Do the Transform, for newer version customization builds, where ExpertSourceDirectory is fed in CustomizationBuilder.exe -->
    <Aderant.TextTransform.Tasks.Transform
      Condition="'$(ExpertSourceDirectory)' != ''"
      SolutionDirectory="$(SolutionDirectoryPath)"
      TemplatesToProcess="@(rmT4TransformItems)"
      ReferencePaths="@(AssemblyReferencePaths)"
      IncludeFolders="@(TemplateIncludeFolders)"
      DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
      TrackerLogDirectory="$(TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
      OverwriteReadOnlyOutputFiles="true"
      TempDirectoryOverride="$(ModuleBuildTempDirectory)"
      SearchPaths="@(SearchPaths)"
      EnvironmentVariables="$(EnvironmentVariableProperties)">

      <Output ItemName="GeneratedFiles"
              TaskParameter="GeneratedFiles" />
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles" />
    </Aderant.TextTransform.Tasks.Transform>

    <!-- Do the Transform, for older version (~81x) where the SearchPaths and EnvironmentVariables are not available in the T4Build module -->
    <Aderant.TextTransform.Tasks.Transform
        Condition="'$(ExpertSourceDirectory)' == ''"
        SolutionDirectory="$(SolutionDirectoryPath)"
        TemplatesToProcess="@(rmT4TransformItems)"
        ReferencePaths="@(AssemblyReferencePaths)"
        AssemblyReferences="@(rmT4AssemblyReferences)"
        IncludeFolders="@(TemplateIncludeFolders)"
        DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
        TrackerLogDirectory="$(TrackerLogDirectory)"
        TrackFileAccess="$(TrackFileAccess)"
        MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
        OverwriteReadOnlyOutputFiles="true"
        TempDirectoryOverride="$(ModuleBuildTempDirectory)">

      <Output ItemName="GeneratedFiles"
              TaskParameter="GeneratedFiles" />
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles" />
    </Aderant.TextTransform.Tasks.Transform>

  </Target>


  <Target Name="FindVisualStudio">
    <PropertyGroup Condition="'$(IsVisualStudio2019OrHigher)' == 'true'">
      <_VSPaths>$([Microsoft.Build.Utilities.ToolLocationHelper]::GetFoldersInVSInstallsAsString('', '', ''))</_VSPaths>
      <_VSPaths>$([MSBuild]::Unescape($(_VSPaths)))</_VSPaths>
    </PropertyGroup>

    <ItemGroup>
      <_InstalledToolVersion Include="$(_VSPaths)" />
    </ItemGroup>
  </Target>


  <Target Name="FindInstalledToolVersions" DependsOnTargets="FindVisualStudio">
    <ItemGroup>
      <_InstalledToolVersion Include="$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToBuildTools('16.0'))" />
      <_InstalledToolVersion Include="$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToBuildTools('15.0'))" />
      <_InstalledToolVersion Include="$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToBuildTools('14.0'))" />
      <_InstalledToolVersion Include="$([Microsoft.Build.Utilities.ToolLocationHelper]::GetPathToBuildTools('12.0'))" />
    </ItemGroup>

    <ItemGroup>
      <InstalledToolVersion Include="@(_InstalledToolVersion->Distinct())" />
    </ItemGroup>
  </Target>


  <Target Name="TextTransformFindReferencePaths" DependsOnTargets="FindInstalledToolVersions" Returns="$(rmT4AssemblyReferencePaths);@(TextTemplatingBuildTasks);@(DslDirectiveProcessors);@(VisualStudioDslAssemblies)">
    <PropertyGroup>
      <VSSDKPath Condition="'$(VSSDK120Install)' != ''">$(VSSDK120Install)</VSSDKPath>
      <VSSDKPath Condition="'$(VSSDK140Install)' != ''">$(VSSDK140Install)</VSSDKPath>
    </PropertyGroup>

    <PropertyGroup>
      <ProgramFiles32>$(MSBuildProgramFiles32)</ProgramFiles32>
    </PropertyGroup>

    <ItemGroup>
      <VisualStudioDslAssemblies Include="$(VSSDKPath)VisualStudioIntegration\Common\Assemblies\v4.0\Microsoft.VisualStudio.Modeling.Sdk.*.dll" />
      <VisualStudioDslAssemblies Include="$(ProgramFiles32)\Microsoft Visual Studio\*\*\VSSDK\VisualStudioIntegration\Common\Assemblies\v4.0\Microsoft.VisualStudio.Modeling.Sdk.*.dll" />
    </ItemGroup>

    <ItemGroup>
      <VSSDKPaths Include="@(VisualStudioDslAssemblies->DirectoryName()->Distinct())" />
    </ItemGroup>

    <ItemGroup>
      <DslDirectiveProcessors Include="%(VSSDKPaths.FullPath)\Microsoft.VisualStudio.Modeling.Sdk.DslDefinition.*.dll">
        <IsDslDirectiveProcessor>true</IsDslDirectiveProcessor>
      </DslDirectiveProcessors>
    </ItemGroup>

    <ItemGroup>
      <PublicAssemblies Include="$([System.IO.Directory]::GetDirectories('$(ProgramFiles32)\Microsoft Visual Studio', 'PublicAssemblies', System.IO.SearchOption.AllDirectories))" />
    </ItemGroup>

    <ItemGroup>
      <RoslynAssemblies Include="%(InstalledToolVersion.Identity)\Roslyn\Microsoft.CodeAnalysis.dll" />
      <RoslynAssemblies Include="%(InstalledToolVersion.Identity)\Roslyn\Microsoft.CodeAnalysis.CSharp.dll" />
      <RoslynAssemblies Include="%(InstalledToolVersion.Identity)\Microsoft.CodeAnalysis.dll" />
      <RoslynAssemblies Include="%(InstalledToolVersion.Identity)\Microsoft.CodeAnalysis.CSharp.dll" />
    </ItemGroup>

    <ItemGroup>
      <RoslynPaths Include="@(RoslynAssemblies->DirectoryName()->Distinct())" />
    </ItemGroup>

    <PropertyGroup>
      <rmT4AssemblyReferencePaths>$(rmT4AssemblyReferencePaths);@(VSSDKPaths);@(RoslynPaths);@(PublicAssemblies)</rmT4AssemblyReferencePaths>
    </PropertyGroup>

    <ItemGroup>
      <TextTemplatingBuildTasks Include="%(InstalledToolVersion.Identity)\..\..\Microsoft\VisualStudio\*\TextTemplating\Microsoft.TextTemplating.Build.Tasks.dll">
        <IsTaskAssembly>true</IsTaskAssembly>
      </TextTemplatingBuildTasks>
      <TextTemplatingBuildTasks Include="%(InstalledToolVersion.Identity)\MSBuild\Microsoft\VisualStudio\*\TextTemplating\Microsoft.TextTemplating.Build.Tasks.dll">
        <IsTaskAssembly>true</IsTaskAssembly>
      </TextTemplatingBuildTasks>
    </ItemGroup>

    <GetOrPutContextVariable
      ContextEndpoint="$(ContextEndpoint)"
      VariableName="ResolvedTextTransformReferencePaths"
      Properties="$(rmT4AssemblyReferencePaths)">
    </GetOrPutContextVariable>

    <GetOrPutContextVariable
      ContextEndpoint="$(ContextEndpoint)"
      VariableName="TextTemplatingBuildTasksPaths"
      Properties="@(TextTemplatingBuildTasks)">
    </GetOrPutContextVariable>

    <GetOrPutContextVariable
      ContextEndpoint="$(ContextEndpoint)"
      VariableName="DslDirectiveProcessors"
      Properties="@(DslDirectiveProcessors)">
    </GetOrPutContextVariable>

  </Target>


  <!--
    *************************************************************************************************************
    rmT4AssemblyReferencePaths
    *************************************************************************************************************
  -->
  <Target Name="rmT4AssemblyReferencePaths">

    <GetOrPutContextVariable
      ContextEndpoint="$(ContextEndpoint)"
      AllowInProcLookup="true"
      VariableName="ResolvedTextTransformReferencePaths">
      <Output TaskParameter="Values" ItemName="ResolvedTextTransformReferencePaths" />
    </GetOrPutContextVariable>

    <GetOrPutContextVariable
      ContextEndpoint="$(ContextEndpoint)"
      AllowInProcLookup="true"
      VariableName="TextTemplatingBuildTasksPaths">
      <Output TaskParameter="Values" ItemName="TextTemplatingBuildTasks" />
    </GetOrPutContextVariable>

    <GetOrPutContextVariable
      ContextEndpoint="$(ContextEndpoint)"
      AllowInProcLookup="true"
      VariableName="DslDirectiveProcessors">
      <Output TaskParameter="Values" ItemName="DslDirectiveProcessors" />
    </GetOrPutContextVariable>

    <CallTarget Targets="TextTransformFindReferencePaths" Condition="'@(ResolvedTextTransformReferencePaths)' == ''">
      <Output TaskParameter="TargetOutputs" ItemName="_TargetOutputs" />
    </CallTarget>

    <ItemGroup>
      <ResolvedTextTransformReferencePaths Include="@(_TargetOutputs)" Condition="'%(_TargetOutputs.IsTaskAssembly)' != 'true'" />
      <TextTemplatingBuildTasks Include="@(_TargetOutputs)" Condition="'%(_TargetOutputs.IsTaskAssembly)' == 'true'" />
      <DslDirectiveProcessors Include="@(_TargetOutputs)" Condition="'%(_TargetOutputs.IsDslDirectiveProcessor)' == 'true'" />
    </ItemGroup>

    <Error Condition="'@(TextTemplatingBuildTasks)' == ''" Text="TextTemplatingBuildTasks is empty" />

    <PropertyGroup>
      <rmT4AssemblyReferencePaths>$(rmT4AssemblyReferencePaths);@(ResolvedTextTransformReferencePaths)</rmT4AssemblyReferencePaths>
    </PropertyGroup>
  </Target>


  <!--
    *************************************************************************************************************
    rmT4DslDirectiveProcessors
    *************************************************************************************************************
  -->
  <Target Name="rmT4DslDirectiveProcessors">
    <PropertyGroup>
      <SoftwareFactoryPath Condition="'$(ExpertSourceDirectory)' == ''">$(SolutionDirectoryPath)Dependencies\</SoftwareFactoryPath>
      <SoftwareFactoryPath Condition="'$(ExpertSourceDirectory)' != ''">$(ExpertSourceDirectory)</SoftwareFactoryPath>
    </PropertyGroup>

    <PropertyGroup>
      <rmSoftwareFactoryCommonDll>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Common.dll</rmSoftwareFactoryCommonDll>
    </PropertyGroup>

    <Microsoft.Build.Tasks.GetAssemblyIdentity
      Condition="Exists('$(rmSoftwareFactoryCommonDll)')"
      AssemblyFiles="$(rmSoftwareFactoryCommonDll)">
      <Output
        TaskParameter="Assemblies"
        ItemName="rmSoftwareFactoryCommonDllIdentity"/>
    </Microsoft.Build.Tasks.GetAssemblyIdentity>

    <PropertyGroup Condition="'@(rmSoftwareFactoryCommonDllIdentity)' != ''">
      <rmSoftwareFactoryVersion>%(rmSoftwareFactoryCommonDllIdentity.Version)</rmSoftwareFactoryVersion>
    </PropertyGroup>

    <ItemGroup>
      <rmT4DslDirectiveProcessors Include="DslDirectiveProcessor">
        <Class>Microsoft.VisualStudio.Modeling.DslDefinition.DslDirectiveProcessor</Class>
        <CodeBase>%(DslDirectiveProcessors.FullPath)</CodeBase>
      </rmT4DslDirectiveProcessors>

      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="DomainModelDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Domain.DomainModelDslDirectiveProcessor</Class>
        <CodeBase>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Domain.dll</CodeBase>
      </rmT4DslDirectiveProcessors>

      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="ServiceDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Service.ServiceDslDirectiveProcessor</Class>
        <CodeBase>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Service.dll</CodeBase>
      </rmT4DslDirectiveProcessors>
    </ItemGroup>

  </Target>

</Project>