<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ***********************************************************************
    ***  RM.TransformTemplates.Targets                                  ***
    ***  Please retain formatting, one attribute per line, and split    ***
    ***  delimited values over several lines.                           ***
    ***********************************************************************
  -->

  <Target Name="rmBeforeTransformTemplates">
    <!--  Example:
        <CreateProperty Value="$(AderantDependencies)\ExpertFramework;
                               $(AderantDependencies)\FileOpening;">
            <Output TaskParameter="Value" PropertyName="rmT4AssemblyReferencePaths"/>
        </CreateProperty>
        <CreateItem Include="$(SolutionRoot)\TimeEntryService\**\*.tt"
                    AdditionalMetadata="Generator=TextTemplatingFileGenerator">
            <Output TaskParameter="Include" ItemName="rmT4TextTemplates" />
        </CreateItem>
    -->
  </Target>



  <PropertyGroup>
    <TransformTaskDirectory Condition="'$(ExpertSourceDirectory)' == ''">$(SolutionDirectoryPath)Dependencies\</TransformTaskDirectory>
    <TransformTaskDirectory Condition="'$(ExpertSourceDirectory)' != ''">$(ExpertSourceDirectory)</TransformTaskDirectory>

    <rmT4TemplateIncludeFolders Condition="('$(rmT4TemplateIncludeFolders)'=='')">$(SolutionDirectoryPath)Dependencies</rmT4TemplateIncludeFolders>

    <rmTransformTemplatesWorkerDependsOn>
      rmBeforeTransformTemplates;
      rmT4AssemblyReferencePaths;
      rmT4DslDirectiveProcessors;
      BindTransformTask;
    </rmTransformTemplatesWorkerDependsOn>

    <TransformTask Condition="'$(TransformTask)' == ''">$(TEMP)\MSBuild\$(TemporaryDirectoryKey)\TransformTask.dll</TransformTask>
  </PropertyGroup>


  <Target Name="BindTransformTask">
    <!-- We cannot statically determine which transform task exists so we have this lovely trampoline function -->
    <ItemGroup>
      <!--<_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v16.0.dll" />-->
      <_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v15.0.dll" />
      <_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v14.0.dll" />
      <_TransformTask Include="$(TransformTaskDirectory)Aderant.TextTransform.v12.0.dll" />

      <TransformTask Include="@(_TransformTask)" Condition="Exists('%(_TransformTask.FullPath)')" />
    </ItemGroup>

    <PropertyGroup>
      <TransformTaskFile>@(TransformTask)</TransformTaskFile>
      <TransformTaskFile>$(TransformTaskFile.Split(';')[0])</TransformTaskFile>
    </PropertyGroup>

    <Copy Condition="!Exists('$(TransformTask)')"
          SkipUnchangedFiles="true"
          SourceFiles="$(TransformTaskFile)"
          DestinationFiles="$(TransformTask)"
          UseHardlinksIfPossible="true"
          Retries="0"
          ContinueOnError="True" />

    <Error Text="The TransformTask file: '$(TransformTask)' does not exist."
      Condition="!Exists('$(TransformTask)')" />

    <LoadAssembly AssemblyFile="$(TransformTaskDirectory)Aderant.TextTransform.Core.dll" />

  </Target>

  <UsingTask AssemblyFile="$(TransformTask)" TaskName="Aderant.TextTransform.Tasks.Transform" />

  <!--
    *************************************************************************************************************
      This target is called to transform all templates in the solution
    *************************************************************************************************************
    -->
  <Target Name="rmTransformTemplates"
          DependsOnTargets="$(rmTransformTemplatesDependsOn)">
    <CallTarget Targets="rmTransformTemplatesWorker" />
  </Target>

  <Target Name="rmTransformTemplatesWorker"
          Condition="('$(rmBCItemTransformTemplatesEnabled)'=='true')"
          DependsOnTargets="$(rmTransformTemplatesWorkerDependsOn)">

    <Error
      Condition="('$(rmT4AssemblyReferencePaths)'=='')"
      Text="Missing required property 'rmT4AssemblyReferencePaths'" />
    <Error
      Condition="('@(rmT4DslDirectiveProcessors)'=='')"
      Text="Missing required item group 'rmT4DslDirectiveProcessors'" />
    <Error
      Condition="('@(rmT4TextTemplates)'=='') And ('$(IsCustomBuild)' != 'true')"
      Text="Missing required item group 'rmT4TextTemplates'" />

    <Message Text="rmT4DslDirectiveProcessors" />
    <Message Text="Processor --> %(Identity) %(rmT4DslDirectiveProcessors.CodeBase)" />

    <Message
      Text="
rmT4AssemblyReferencePaths&#xA;$(rmT4AssemblyReferencePaths)&#xA;
rmT4TemplateIncludeFolders&#xA;$(rmT4TemplateIncludeFolders)
"/>

    <ItemGroup>
      <rmT4TransformItems Include="@(rmT4TextTemplates);" />
      <AssemblyReferencePaths Include="$(rmT4AssemblyReferencePaths)" />
      <TemplateIncludeFolders Include="$(rmT4TemplateIncludeFolders)" />
    </ItemGroup>

    <ItemGroup>
      <SearchPaths Include="$(AlternativeOutputDirectory)" />
      <SearchPaths Include="$(ExpertSourceDirectory)" />
    </ItemGroup>

    <PropertyGroup>
      <EnvironmentVariableProperties Condition="'$(EnvironmentVariableProperties)' == ''">ExpertSourceDirectory=$(ExpertSourceDirectory);ArtifactStaging=$(AlternativeOutputDirectory)</EnvironmentVariableProperties>

      <!--Directory into which .tlog files will be written.-->
      <TrackerLogDirectory Condition=" '$(TrackerLogDirectory)' =='' ">$(ModuleBuildTempDirectory)t4\</TrackerLogDirectory>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsDesktopBuild)' == 'true'">
      <!--Indicates whether only out of date templates should be transformed, or whether all templates should be transformed.-->
      <TransformOutOfDateOnly Condition=" '$(TransformOutOfDateOnly)' == '' ">true</TransformOutOfDateOnly>
      <TrackFileAccess Condition=" '$(TrackFileAccess)' =='' ">true</TrackFileAccess>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsDesktopBuild)' != 'true'">
      <TransformOutOfDateOnly Condition=" '$(TransformOutOfDateOnly)' == '' ">false</TransformOutOfDateOnly>
      <TrackFileAccess Condition=" '$(TrackFileAccess)' =='' ">false</TrackFileAccess>
    </PropertyGroup>

    <ItemGroup>
      <ExcludedInputPaths Include="$(MSBuildProgramFiles32);$(WinDir)\ASSEMBLY;$(WinDir)\MICROSOFT.NET" />
    </ItemGroup>

    <!-- Do the Transform, for newer version customization builds, where ExpertSourceDirectory is fed in CustomizationBuilder.exe -->
    <Aderant.TextTransform.Tasks.Transform
      Condition="'$(ExpertSourceDirectory)' != ''"
      SolutionDirectory="$(SolutionDirectoryPath)"
      TemplatesToProcess="@(rmT4TransformItems)"
      ReferencePaths="@(AssemblyReferencePaths)"
      AssemblyReferences="@(rmT4AssemblyReferences)"
      IncludeFolders="@(TemplateIncludeFolders)"
      DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
      TrackerLogDirectory="$(TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
      OverwriteReadOnlyOutputFiles="true"
      TempDirectoryOverride="$(ModuleBuildTempDirectory)"
      EnvironmentVariables="$(EnvironmentVariableProperties)"
      ExcludedInputPaths="@(ExcludedInputPaths)"
      SearchPaths="@(SearchPaths)">
      <Output ItemName="GeneratedFiles"
              TaskParameter="GeneratedFiles" />
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles" />
    </Aderant.TextTransform.Tasks.Transform>

    <!-- Do the Transform, for older version (~81x) where the SearchPaths and EnvironmentVariables are not available in the T4Build module -->
    <Aderant.TextTransform.Tasks.Transform
        Condition="'$(ExpertSourceDirectory)' == ''"
        SolutionDirectory="$(SolutionDirectoryPath)"
        TemplatesToProcess="@(rmT4TransformItems)"
        ReferencePaths="@(AssemblyReferencePaths)"
        AssemblyReferences="@(rmT4AssemblyReferences)"
        IncludeFolders="@(TemplateIncludeFolders)"
        DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
        TrackerLogDirectory="$(TrackerLogDirectory)"
        TrackFileAccess="$(TrackFileAccess)"
        MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
        OverwriteReadOnlyOutputFiles="true"
        TempDirectoryOverride="$(ModuleBuildTempDirectory)"
        ExcludedInputPaths="@(ExcludedInputPaths)">
      <Output ItemName="GeneratedFiles"
              TaskParameter="GeneratedFiles" />
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles" />
    </Aderant.TextTransform.Tasks.Transform>

  </Target>

  <!--
    *************************************************************************************************************
    rmT4AssemblyReferencePaths
    *************************************************************************************************************
  -->
  <Target Name="rmT4AssemblyReferencePaths">

    <TextTemplatingPathResolver>
      <Output TaskParameter="ReferencePaths" PropertyName="_rmT4AssemblyReferencePaths" />
      <Output TaskParameter="AssemblyReferences" ItemName="rmT4AssemblyReferences" />
      <Output TaskParameter="TextTemplatingBuildTaskPaths" ItemName="TextTemplatingBuildTasks" />
      <Output TaskParameter="DslDirectiveProcessors" ItemName="DslDirectiveProcessors" />
    </TextTemplatingPathResolver>

    <PropertyGroup>
      <rmT4AssemblyReferencePaths>$(rmT4AssemblyReferencePaths);$(_rmT4AssemblyReferencePaths)</rmT4AssemblyReferencePaths>
    </PropertyGroup>

    <Error Condition="'@(TextTemplatingBuildTasks)' == ''" Text="TextTemplatingBuildTasks is empty" />
  </Target>


  <!--
    *************************************************************************************************************
    rmT4DslDirectiveProcessors
    *************************************************************************************************************
  -->
  <Target Name="rmT4DslDirectiveProcessors">
    <PropertyGroup>
      <SoftwareFactoryPath Condition="'$(ExpertSourceDirectory)' == ''">$(SolutionDirectoryPath)Dependencies\</SoftwareFactoryPath>
      <SoftwareFactoryPath Condition="'$(ExpertSourceDirectory)' != ''">$(ExpertSourceDirectory)</SoftwareFactoryPath>
    </PropertyGroup>

    <PropertyGroup>
      <DomainDslProcessorFile>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Domain.dll</DomainDslProcessorFile>
      <ServiceDslProcessorFile>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Service.dll</ServiceDslProcessorFile>
    </PropertyGroup>

    <ItemGroup>
      <rmT4DslDirectiveProcessors Include="DslDirectiveProcessor"
                                  Condition="Exists('%(DslDirectiveProcessors.FullPath)')">
        <Class>Microsoft.VisualStudio.Modeling.DslDefinition.DslDirectiveProcessor</Class>
        <CodeBase>%(DslDirectiveProcessors.FullPath)</CodeBase>
      </rmT4DslDirectiveProcessors>

      <rmT4DslDirectiveProcessors Condition="Exists('$(DomainDslProcessorFile)')"
                                  Include="DomainModelDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Domain.DomainModelDslDirectiveProcessor</Class>
        <CodeBase>$(DomainDslProcessorFile)</CodeBase>
      </rmT4DslDirectiveProcessors>

      <rmT4DslDirectiveProcessors Condition="Exists('$(ServiceDslProcessorFile)')"
                                  Include="ServiceDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Service.ServiceDslDirectiveProcessor</Class>
        <CodeBase>$(ServiceDslProcessorFile)</CodeBase>
      </rmT4DslDirectiveProcessors>
    </ItemGroup>

  </Target>

</Project>