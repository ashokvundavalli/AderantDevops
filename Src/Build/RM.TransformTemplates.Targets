<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">

  <!-- 
    ***********************************************************************
    ***  RM.TransformTemplates.Targets                                  ***
    ***  Please retain formatting, one attribute per line, and split    ***
    ***  delimited values over several lines.                           ***                                  
    ***********************************************************************
  -->

  <PropertyGroup>
    <VSSDKPath Condition="'$(VSSDK120Install)' != ''">$(VSSDK120Install)</VSSDKPath>
    <VSSDKPath Condition="'$(VSSDK140Install)' != ''">$(VSSDK140Install)</VSSDKPath>
  </PropertyGroup>

  <PropertyGroup>
    <!--Indicates whether only out of date templates should be transformed, or whether all templates should be transformed.-->
    <TransformOutOfDateOnly Condition=" '$(TransformOutOfDateOnly)' =='' ">true</TransformOutOfDateOnly>

    <!--Directory into which .tlog files will be written.-->
    <TrackerLogDirectory Condition=" '$(TrackerLogDirectory)' =='' ">$(SolutionDirectoryPath)\BuildTemp\T4</TrackerLogDirectory>

    <TrackFileAccess Condition=" '$(TrackFileAccess)' =='' ">true</TrackFileAccess>
  </PropertyGroup>

  <UsingTask
    TaskName="LoadTextTemplatingTask"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(CodeTaskFactoryAssembly)" >
      <ParameterGroup >
        <Directory ParameterType="System.String" Required="true"/>
      </ParameterGroup>
      <Task>
        <Reference Include="System.Core"/>
        <Reference Include="System.Xml"/>
        <Reference Include="System.Xml.Linq"/>
        <Using Namespace="System"/>
        <Using Namespace="System.IO"/>
        <Using Namespace="System.Linq"/>
        <Using Namespace="System.Xml.Linq"/>
        <Code>
<![CDATA[    
    string file = System.IO.Directory.GetFileSystemEntries(Directory, "Microsoft.TextTemplating.Build.Tasks.dll", System.IO.SearchOption.AllDirectories).FirstOrDefault();
    if (file != null) {
        System.Reflection.Assembly.LoadFrom(file);
    }
]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="rmBeforeTransformTemplates">
    <!--  Example:
        <CreateProperty Value="$(AderantDependencies)\ExpertFramework;
                               $(AderantDependencies)\FileOpening;">
            <Output TaskParameter="Value" PropertyName="rmT4AssemblyReferencePaths"/>
        </CreateProperty>
        <CreateItem Include="$(SolutionRoot)\TimeEntryService\**\*.tt"
                    AdditionalMetadata="Generator=TextTemplatingFileGenerator">
            <Output TaskParameter="Include" ItemName="rmT4TextTemplates" />
        </CreateItem>    
    -->
  </Target>
    
  <UsingTask
    AssemblyFile="$(TransformTask)"
    TaskName="Aderant.TextTransform.Tasks.Transform" />

  <!-- 
    *************************************************************************************************************
      This target is called to transform all templates in the solution
    *************************************************************************************************************
    -->
  <PropertyGroup>
    <TransformTask Condition="'$(VisualStudioVersion)' == '12.0'">Aderant.TextTransform.v12.0.dll</TransformTask>
    <TransformTask Condition="'$(VisualStudioVersion)' == '14.0'">Aderant.TextTransform.v14.0.dll</TransformTask>

    <TransformTask Condition="'$(ExpertSourceDirectory)' == ''">$(SolutionDirectoryPath)Dependencies\$(TransformTask)</TransformTask>
    <TransformTask Condition="'$(ExpertSourceDirectory)' != ''">$(ExpertSourceDirectory)$(TransformTask)</TransformTask>
	
    <rmT4TemplateIncludeFolders Condition="('$(rmT4TemplateIncludeFolders)'=='')">$(SolutionDirectoryPath)Dependencies</rmT4TemplateIncludeFolders>
    
    <rmTransformTemplatesWorkerDependsOn>
      rmBeforeTransformTemplates;
      rmT4AssemblyReferencePaths;
      rmT4DslDirectiveProcessors;
    </rmTransformTemplatesWorkerDependsOn>
  </PropertyGroup>       

  <Target Name="rmTransformTemplates" 
          DependsOnTargets="$(rmTransformTemplatesDependsOn)"> 
    <CallTarget Targets="rmTransformTemplatesWorker"/>
  </Target>

  <Target Name="rmTransformTemplatesWorker" 
          Condition="('$(rmBCItemTransformTemplatesEnabled)'=='true')" 
          DependsOnTargets="$(rmTransformTemplatesWorkerDependsOn)">

    <Error
      Condition="('$(rmT4AssemblyReferencePaths)'=='')"
      Text="Missing required property 'rmT4AssemblyReferencePaths'" />
    <Error
      Condition="('@(rmT4DslDirectiveProcessors)'=='')"
      Text="Missing required item group 'rmT4DslDirectiveProcessors'" />
    <Error
      Condition="('@(rmT4TextTemplates)'=='') And ('$(IsCustomBuild)' != 'true')"
      Text="Missing required item group 'rmT4TextTemplates'" />    

    <Message Text="rmT4DslDirectiveProcessors" />
    <Message Text="Processor --> %(Identity) @(rmT4DslDirectiveProcessors)" />

    <Message
      Text="
rmT4AssemblyReferencePaths&#xA;$(rmT4AssemblyReferencePaths)&#xA;
rmT4TemplateIncludeFolders&#xA;$(rmT4TemplateIncludeFolders)
"/>

    <ItemGroup>
      <rmT4TransformItems Include="@(rmT4TextTemplates);" />
      <AssemblyReferencePaths Include="$(rmT4AssemblyReferencePaths)" />
      <TemplateIncludeFolders Include="$(rmT4TemplateIncludeFolders)" />
    </ItemGroup>

    <PropertyGroup>
      <TempDirectoryOverride Condition="'$(IsDesktopBuild)' == 'true' Or '$(BuildAll)' == 'true'">$(ModuleBuildDirectory)..\..\_BuildTemp</TempDirectoryOverride>
      <TempDirectoryOverride Condition="'$(IsDesktopBuild)' != 'true' And '$(BuildAll)' != 'true'">$(ModuleBuildDirectory)..\BuildTemp</TempDirectoryOverride>
    </PropertyGroup>

    <LoadTextTemplatingTask Directory="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(MSBuildToolsVersion)\TextTemplating" />
	
    <ItemGroup>
      <SearchPaths Include="$(AlternativeOutputDirectory)" />
      <SearchPaths Include="$(ExpertSourceDirectory)" />
    </ItemGroup>
	
    <PropertyGroup>
      <EnvironmentVariableProperties Condition="'$(EnvironmentVariableProperties)' == ''">ExpertSourceDirectory=$(ExpertSourceDirectory);ArtifactStaging=$(AlternativeOutputDirectory)</EnvironmentVariableProperties>
    </PropertyGroup>

    <!-- Do the Transform, for newer version customization builds, where ExpertSourceDirectory is fed in CustomizationBuilder.exe -->
    <Aderant.TextTransform.Tasks.Transform
      Condition="'$(ExpertSourceDirectory)' != ''"
      SolutionDirectory="$(SolutionDirectoryPath)"
      TemplatesToProcess="@(rmT4TransformItems)"
      ReferencePaths="@(AssemblyReferencePaths)"
      IncludeFolders="@(TemplateIncludeFolders)"
      DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
      TrackerLogDirectory="$(TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
      OverwriteReadOnlyOutputFiles="true"
      TempDirectoryOverride="$(TempDirectoryOverride)"
      SearchPaths="@(SearchPaths)"
      EnvironmentVariables="$(EnvironmentVariableProperties)">
      
      <Output ItemName="GeneratedFiles"
         TaskParameter="GeneratedFiles" />
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles" />
    </Aderant.TextTransform.Tasks.Transform>

    <!-- Do the Transform, for older version (~81x) where the SearchPaths and EnvironmentVariables are not available in the T4Build module -->
    <Aderant.TextTransform.Tasks.Transform
        Condition="'$(ExpertSourceDirectory)' == ''"
        SolutionDirectory="$(SolutionDirectoryPath)"
        TemplatesToProcess="@(rmT4TransformItems)"
        ReferencePaths="@(AssemblyReferencePaths)"
        IncludeFolders="@(TemplateIncludeFolders)"
        DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
        TrackerLogDirectory="$(TrackerLogDirectory)"
        TrackFileAccess="$(TrackFileAccess)"
        MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
        OverwriteReadOnlyOutputFiles="true"
        TempDirectoryOverride="$(TempDirectoryOverride)">
        
      <Output ItemName="GeneratedFiles"
              TaskParameter="GeneratedFiles" />
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles" />
    </Aderant.TextTransform.Tasks.Transform>

  </Target>

  <!--
    *************************************************************************************************************
    rmT4AssemblyReferencePaths
    *************************************************************************************************************
  -->
  <Target Name="rmT4AssemblyReferencePaths">
    
    <Error Condition="'$(VSSDKPath)' == ''" Text="Visual Studio SDK path not found" />
    
    <!-- Path to reference dlls required by DSLs -->
    <PropertyGroup>
      <VSSDKPath>$(VSSDKPath)VisualStudioIntegration\Common\Assemblies\v4.0\</VSSDKPath>
      <rmT4AssemblyReferencePaths>$(rmT4AssemblyReferencePaths);$(VSSDKPath);</rmT4AssemblyReferencePaths>
    </PropertyGroup>
  </Target>

  <!--
    *************************************************************************************************************
    rmT4DslDirectiveProcessors
    *************************************************************************************************************
  -->
  <Target Name="rmT4DslDirectiveProcessors">
  	<PropertyGroup>
		<SoftwareFactoryPath Condition="'$(ExpertSourceDirectory)' == ''">$(SolutionDirectoryPath)Dependencies\</SoftwareFactoryPath>
		<SoftwareFactoryPath Condition="'$(ExpertSourceDirectory)' != ''">$(ExpertSourceDirectory)</SoftwareFactoryPath>
	</PropertyGroup>
	
    <PropertyGroup>
      <rmSoftwareFactoryCommonDll>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Common.dll</rmSoftwareFactoryCommonDll>	  
    </PropertyGroup>

    <Microsoft.Build.Tasks.GetAssemblyIdentity
      Condition="Exists('$(rmSoftwareFactoryCommonDll)')"
      AssemblyFiles="$(rmSoftwareFactoryCommonDll)">
      <Output
        TaskParameter="Assemblies"
        ItemName="rmSoftwareFactoryCommonDllIdentity"/>
    </Microsoft.Build.Tasks.GetAssemblyIdentity>

    <PropertyGroup Condition="'@(rmSoftwareFactoryCommonDllIdentity)'!=''">
      <rmSoftwareFactoryVersion>%(rmSoftwareFactoryCommonDllIdentity.Version)</rmSoftwareFactoryVersion>
    </PropertyGroup>

    <ItemGroup>      
      <rmT4DslDirectiveProcessors Include="DslDirectiveProcessor">
        <Class>Microsoft.VisualStudio.Modeling.DslDefinition.DslDirectiveProcessor</Class>
        <CodeBase>$(VSSDKPath)\Microsoft.VisualStudio.Modeling.Sdk.DslDefinition.$(MSBuildToolsVersion).dll</CodeBase>
      </rmT4DslDirectiveProcessors>

      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="DomainModelDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Domain.DomainModelDslDirectiveProcessor</Class>
        <CodeBase>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Domain.dll</CodeBase>
      </rmT4DslDirectiveProcessors>
        
      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="ServiceDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Service.ServiceDslDirectiveProcessor</Class>
        <CodeBase>$(SoftwareFactoryPath)Aderant.Framework.SoftwareFactory.Service.dll</CodeBase>
      </rmT4DslDirectiveProcessors>
    </ItemGroup>

  </Target>

</Project>