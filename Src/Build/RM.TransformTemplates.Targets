<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="12.0">

  <UsingTask
    TaskName="LoadTextTemplatingTask"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup >
      <TextTemplatingPath ParameterType="System.String" Required="true"/>
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core"/>
      <Reference Include="System.Xml"/>
      <Reference Include="System.Xml.Linq"/>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Linq"/>
      <Using Namespace="System.Xml.Linq"/>
      <Code>
        <![CDATA[
  string file = Path.Combine(TextTemplatingPath, "Microsoft.TextTemplating.Build.Tasks.dll");
  if (File.Exists(file)) {
      System.Reflection.Assembly.LoadFrom(file);
  }
]]>
      </Code>
    </Task>
  </UsingTask>


  <!-- 
    ***********************************************************************
    ***  RM.TransformTemplates.Targets                                  ***
    ***  Please retain formatting, one attribute per line, and split    ***
    ***  delimited values over several lines.                           ***                                  
    ***********************************************************************
    -->

  <PropertyGroup>
    <!--Indicates whether only out of date templates should be transformed, or whether all templates should be transformed.-->
    <TransformOutOfDateOnly Condition=" '$(TransformOutOfDateOnly)' =='' ">true</TransformOutOfDateOnly>

    <!--Directory into which .tlog files will be written.-->
    <TrackerLogDirectory Condition=" '$(TrackerLogDirectory)' =='' ">$(SolutionDirectoryPath)\BuildTemp\T4</TrackerLogDirectory>

    <TrackFileAccess Condition=" '$(TrackFileAccess)' =='' ">true</TrackFileAccess>
  </PropertyGroup>

  <Target Name="rmBeforeTransformTemplates">
    <!--  Example:
        <CreateProperty Value="$(AderantDependencies)\ExpertFramework;
                               $(AderantDependencies)\FileOpening;">
            <Output TaskParameter="Value" PropertyName="rmT4AssemblyReferencePaths"/>
        </CreateProperty>
        <CreateItem Include="$(SolutionRoot)\TimeEntryService\**\*.tt"
                    AdditionalMetadata="Generator=TextTemplatingFileGenerator">
            <Output TaskParameter="Include" ItemName="rmT4TextTemplates" />
        </CreateItem>
        -->
  </Target>

  <UsingTask
        AssemblyFile="$(AderantBuildClientTasksV100Lib-1_0_0_0)"
        TaskName="ADERANT.Build.Client.Tasks.v100.Transform" />

  <!-- 
    *************************************************************************************************************
      This target is called to transform all templates in the solution      
    *************************************************************************************************************
    -->
  <PropertyGroup>
    <AderantBuildClientTasksV100Lib-1_0_0_0>$(SolutionDirectoryPath)\Dependencies\ADERANT.Build.Client.Tasks.dll</AderantBuildClientTasksV100Lib-1_0_0_0>
    <rmT4TemplateIncludeFolders Condition="('$(rmT4TemplateIncludeFolders)'=='')">$(SolutionDirectoryPath)\Dependencies</rmT4TemplateIncludeFolders>

    <rmTransformTemplatesWorkerDependsOn>
      rmBeforeTransformTemplates;
      rmT4AssemblyReferencePaths;
      rmT4DslDirectiveProcessors;
    </rmTransformTemplatesWorkerDependsOn>
  </PropertyGroup>

  <Target Name="rmTransformTemplates"
          DependsOnTargets="$(rmTransformTemplatesDependsOn)">
    <CallTarget Targets="rmTransformTemplatesWorker"/>
  </Target>

  <Target Name="rmTransformTemplatesWorker"
          Condition="('$(rmBCItemTransformTemplatesEnabled)'=='true')"
          DependsOnTargets="$(rmTransformTemplatesWorkerDependsOn)">

    <BuildStep
      Condition="('$(IsDesktopBuild)'!='true') And ('$(IsCustomBuild)'!='true')"
      Message="Transforming Text Templates"
      TeamFoundationServerUrl="$(TeamFoundationServerUrl)"
      BuildUri="$(BuildURI)">
      <Output
        TaskParameter="id"
        PropertyName="BuildStepId" />
    </BuildStep>

    <Error
      Condition="('$(rmT4AssemblyReferencePaths)'=='')"
      Text="Missing required property 'rmT4AssemblyReferencePaths'" />
    <Error
      Condition="('@(rmT4DslDirectiveProcessors)'=='')"
      Text="Missing required item group 'rmT4DslDirectiveProcessors'" />
    <Error
      Condition="('@(rmT4TextTemplates)'=='')"
      Text="Missing required item group 'rmT4TextTemplates'" />

    <Message Text="rmT4DslDirectiveProcessors" />
    <Message Text="Processor --> %(Identity) @(rmT4DslDirectiveProcessors)" />

    <Message
      Text="
rmT4AssemblyReferencePaths&#xA;$(rmT4AssemblyReferencePaths)&#xA;
rmT4TemplateIncludeFolders&#xA;$(rmT4TemplateIncludeFolders)
"/>

    <ItemGroup>
      <rmT4TransformItems Include="@(rmT4TextTemplates);" />
      <AssemblyReferencePaths Include="$(rmT4AssemblyReferencePaths)" />
      <TemplateIncludeFolders Include="$(rmT4TemplateIncludeFolders)" />
    </ItemGroup>

    <LoadTextTemplatingTask
      TextTemplatingPath="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v12.0\TextTemplating\" />

    <!-- Do the Transform  -->
    <ADERANT.Build.Client.Tasks.v100.Transform
      TemplatesToProcess="@(rmT4TransformItems)"
      ReferencePaths="@(AssemblyReferencePaths)"
      IncludeFolders="@(TemplateIncludeFolders)"
      DirectiveProcessors="@(rmT4DslDirectiveProcessors)"
      TrackerLogDirectory="$(TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="$(TransformOutOfDateOnly)"
      OverwriteReadOnlyOutputFiles="true">
      <Output ItemName="GeneratedFiles"
              TaskParameter="GeneratedFiles"/>
      <Output ItemName="NonGeneratedFiles"
              TaskParameter="NonGeneratedFiles"/>
    </ADERANT.Build.Client.Tasks.v100.Transform>

    <BuildStep
      Condition="'$(IsDesktopBuild)' != 'true' And '$(IsCustomBuild)' != 'true'"
      TeamFoundationServerUrl="$(TeamFoundationServerUrl)"
      BuildUri="$(BuildUri)"
      Id="$(BuildStepId)"
      Status="Succeeded" />

  </Target>

  <!--
    *************************************************************************************************************
    rmT4AssemblyReferencePaths
    *************************************************************************************************************
  -->
  <Target Name="rmT4AssemblyReferencePaths">
    <!-- Path to reference dlls required by DSLs -->
    <PropertyGroup>
      <VSSDKPath Condition="'$(VSSDK120Install)' != ''">$(VSSDK120Install)VisualStudioIntegration\Common\Assemblies\v4.0\</VSSDKPath>
      <rmT4AssemblyReferencePaths>$(rmT4AssemblyReferencePaths);$(VSSDKPath);$(SolutionDirectoryPath)Dependencies;$(VS120COMNTOOLS)..\IDE\PublicAssemblies</rmT4AssemblyReferencePaths>
    </PropertyGroup>
  </Target>

  <!--
    *************************************************************************************************************
    rmT4DslDirectiveProcessors
    *************************************************************************************************************
  -->
  <Target Name="rmT4DslDirectiveProcessors">
    <PropertyGroup>
      <rmSoftwareFactoryCommonDll>$(SolutionDirectoryPath)Dependencies\Aderant.Framework.SoftwareFactory.Common.dll</rmSoftwareFactoryCommonDll>
    </PropertyGroup>

    <GetAssemblyIdentity
      Condition="Exists('$(rmSoftwareFactoryCommonDll)')"
      AssemblyFiles="$(rmSoftwareFactoryCommonDll)">
      <Output
        TaskParameter="Assemblies"
        ItemName="rmSoftwareFactoryCommonDllIdentity"/>
    </GetAssemblyIdentity>

    <PropertyGroup Condition="'@(rmSoftwareFactoryCommonDllIdentity)'!=''">
      <rmSoftwareFactoryVersion>%(rmSoftwareFactoryCommonDllIdentity.Version)</rmSoftwareFactoryVersion>
    </PropertyGroup>

    <ItemGroup>
      <!-- Only include Aderant Processors if common dll exists in dependencies.-->
      <rmT4DslDirectiveProcessors Include="DslDirectiveProcessor">
        <Class>Microsoft.VisualStudio.Modeling.DslDefinition.DslDirectiveProcessor</Class>
        <CodeBase>$(Registry:HKEY_CURRENT_USER\Software\Microsoft\VisualStudio\12.0_Config@InstallDir)Extensions\Microsoft\DSL SDK\DSL Designer\12.0\Microsoft.VisualStudio.Modeling.Sdk.DslDefinition.12.0.dll</CodeBase>
      </rmT4DslDirectiveProcessors>


      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="DomainModelDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Domain.DomainModelDslDirectiveProcessor</Class>
        <CodeBase>$(SolutionDirectoryPath)Dependencies\Aderant.Framework.SoftwareFactory.Domain.dll</CodeBase>
      </rmT4DslDirectiveProcessors>

      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="ViewModelDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.ViewModel.ViewModelDslDirectiveProcessor</Class>
        <CodeBase>$(SolutionDirectoryPath)Dependencies\Aderant.Framework.SoftwareFactory.ViewModel.dll</CodeBase>
      </rmT4DslDirectiveProcessors>
        
      <rmT4DslDirectiveProcessors Condition="'$(rmSoftwareFactoryVersion)' != ''"
                                  Include="ServiceDslDirectiveProcessor">
        <Class>Aderant.Framework.SoftwareFactory.Service.ServiceDslDirectiveProcessor</Class>
        <CodeBase>$(SolutionDirectoryPath)Dependencies\Aderant.Framework.SoftwareFactory.Service.dll</CodeBase>
      </rmT4DslDirectiveProcessors>
    </ItemGroup>

  </Target>

</Project>
