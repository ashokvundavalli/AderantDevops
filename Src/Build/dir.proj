<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <PackagesDirectory Condition="'$(PackagesDirectory)' == ''">$(MSBuildThisFileDirectory)packages\</PackagesDirectory>
    <ThisProject>$([System.IO.Path]::GetFileName($(MSBuildProjectFullPath)))</ThisProject>
    <IsIntegrationTest>$(ThisProject.StartsWith('IntegrationTest.'))</IsIntegrationTest>
    <IsWeb>$(ThisProject.StartsWith('Web.'))</IsWeb>
    <IsMobile>$(ThisProject.StartsWith('Mobile.'))</IsMobile>
    <IsWebOrMobile>false</IsWebOrMobile>
    <IsWebOrMobile Condition="'$(IsWeb)' == 'true' Or '$(IsMobile)' == 'true'">true</IsWebOrMobile>
    <RunTSLint Condition="'$(RunTSLint)' == ''">false</RunTSLint>
  </PropertyGroup>

  <PropertyGroup>
    <ReferencePropertiesFile>ReferencePaths.props</ReferencePropertiesFile>
    <ReferencePathsDirectory>$([MSBuild]::GetDirectoryNameOfFileAbove('$(MSBuildProjectDirectory)', $(ReferencePropertiesFile)))</ReferencePathsDirectory>
    <ReferencePropertiesFileFullPath>$(ReferencePathsDirectory)\$(ReferencePropertiesFile)</ReferencePropertiesFileFullPath>
  </PropertyGroup>
  
  <ItemGroup>
    <ManifestSearchDirectories Include="$(MSBuildThisFileDirectory)Dependencies\" />
    <ManifestSearchDirectories Include="$(MSBuildThisFileDirectory)..\Libraries.Roles\Src\Roles\" />
  </ItemGroup>
  
  <Import Project="$(MSBuildThisFileDirectory)dir.props" Condition="Exists('$(MSBuildThisFileDirectory)dir.props')" />

  <Import Project="$(ReferencePropertiesFileFullPath)" Condition="Exists($(ReferencePropertiesFileFullPath))" />

  <!-- Reapply the reference additional path hints. Because this file might be imported after Microsoft.CSharp.targets we always need to update this property
  to ensure VS takes on the new reference paths -->
  <PropertyGroup Condition="'$(AssemblySearchPaths)' != '' And '$(BuildingInsideVisualStudio)' == 'true'">
    <AssemblySearchPaths>$(AssemblySearchPaths);$(ReferencePath)</AssemblySearchPaths>
  </PropertyGroup>

  <ItemGroup>
    <Analyzer Include="$(PackagesDirectory)Aderant.Build.Analyzer\analyzers\dotnet\cs\*.dll" />
  </ItemGroup>

  <Import Project="$(MSBuildThisFileDirectory)Build\wpp\Aderant.wpp.common.targets" Condition="'$(IsWebOrMobile)' == 'true'" />

  <!--TSLint-->
  <Import Project="$(PackagesDirectory)development\TSLint.MSBuild\build\TSLint.MSBuild.targets" Condition="'$(RunTSLint)' == 'true' And '$(IsWeb)' == 'true'" />
  <PropertyGroup Condition="'$(IsWeb)' == 'true'">
    <TSLintConfig>$(MSBuildProjectDirectory)\tslint.json</TSLintConfig>
    <TSLintCli>$(PackagesDirectory)Aderant.Build.Analyzer\tslint\node_modules\tslint\bin\tslint</TSLintCli>
    <TSLintBreakBuildOnError>true</TSLintBreakBuildOnError>
  </PropertyGroup>

  <!--
    Debugging
    msbuild Web.Foundation.csproj /target:_DirDebug
  -->
  <Target Name="_DirDebug">
      <Message Text="
MSBuildProjectDirectory:  $(MSBuildProjectDirectory)
PackagesDirectory:        $(PackagesDirectory)
DependenciesDirectory:    $(DependenciesDirectory)
IsWeb:                    $(IsWeb)
IsMobile:                 $(IsMobile)
IsWebOrMobile:            $(IsWebOrMobile)
WebDependencyVersion:     $(WebDependencyVersion)
WppCommonTargetsImported: $(WppCommonTargetsImported)
WppV3TargetsImported:     $(WppV3TargetsImported)
WebPublishPipelineCustomizeTargetFile: $(WebPublishPipelineCustomizeTargetFile)
"/>

     <Message Text="@(AllDependencyContent)" />

  </Target>
</Project>