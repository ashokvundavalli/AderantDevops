<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="14.0">

  <Import Project="$(MSBuildThisFileDirectory)\Tasks\MSBuild.Community.Tasks\MSBuild.Community.Tasks.Targets" Condition="'$(MSBuildCommunityTasksLib)' == '' And '$(BuildingInsideVisualStudio)' != 'true'" />


  <PropertyGroup>
    <!-- EnableExcludeFilesByExtension prevents Microsoft.Web.Publishing.targets from excluding .tt files-->
    <EnableExcludeFilesByExtension>false</EnableExcludeFilesByExtension>
    <FilesToIncludeForPublish>OnlyFilesToRunTheApp</FilesToIncludeForPublish>
    <GenerateSampleDeployScript>false</GenerateSampleDeployScript>
    <PublishParametersFile>false</PublishParametersFile>
    <PackageParametersFile>false</PackageParametersFile>
    <DeployOnBuild>true</DeployOnBuild>

    <DefaultPackageOutputDir>$(BinModuleDirectory)</DefaultPackageOutputDir>
    <DesktopBuildPackageLocation>$(BinModuleDirectory)</DesktopBuildPackageLocation>
  </PropertyGroup>


  <Target Name="IsWorkflowProject" BeforeTargets="AfterCollectFilesFromReference">
    <PropertyGroup>
      <_IsWorkflowProject>false</_IsWorkflowProject>
      <_IsWorkflowProject Condition="$(AssemblyName.Contains('Workflow'))">true</_IsWorkflowProject>
      <OnAfterCollectFilesFromReference Condition="'$(_IsWorkflowProject)' != 'true'">$(OnAfterCollectFilesFromReference);CustomAfterCollectFilesFromReference</OnAfterCollectFilesFromReference>
    </PropertyGroup>

    <Message Condition="'$(_IsWorkflowProject)' != 'true'" Importance="high" Text="Skipping web pipeline customizations as this is a workflow project" />
  </Target>

  
  <Target Name="RemoveReferenceBaggageFromWebPackage" AfterTargets="PipelineCollectFilesPhase">    
    <ItemGroup>
      <FilesForPackagingFromProject Remove="@(FilesForPackagingFromProject)" Condition="%(FilesForPackagingFromProject.FromTarget) == 'CollectFilesFromReference'" />
    </ItemGroup>
  </Target>

  <!-- Override the standard target so we don't collect any baggage -->
  <Target Name="CollectFilesFromReference" />  

  <!-- CollectFilesFrom_binDeployableAssemblies is the last step in PublishPipelineCollectFilesCore from Microsoft.Web.Publishing.OnlyFilesToRunTheApp.targets-->
  <Target Name="CollectFilesFromContentCleanUp" AfterTargets="CollectFilesFrom_binDeployableAssemblies">
    <!-- Exclude all environment specific files from packaging -->
    <ItemGroup>
      <ExcludeSpec Include="instance.config" />
      <ExcludeSpec Include="bindings.config" />
      <ExcludeSpec Include="clients.config" />
      <ExcludeSpec Include="extensions.config" />
      <ExcludeSpec Include="packages.config" />
      <ExcludeSpec Include="BuildInfo.config" />
      <ExcludeSpec Include="FrameworkKey.snk" />
    </ItemGroup>

    <Aderant.Build.Tasks.FilterItemGroup
      ItemGroup="@(FilesForPackagingFromProject)"
      ExcludeFilterSpec="@(ExcludeSpec)"
      FilterType="FileName">
      <Output ItemName="FilteredFilesForPackagingFromProject" TaskParameter="Result" />
    </Aderant.Build.Tasks.FilterItemGroup>

    <ItemGroup>
     <FilesForPackagingFromProject Remove="@(FilesForPackagingFromProject)" />
     <FilesForPackagingFromProject Include="@(FilteredFilesForPackagingFromProject)" />
    </ItemGroup>

  </Target>



  <!-- This target replaces the full path to source that MSDeploy typically uses -->
  <PropertyGroup>
    <PackagePath Condition=" '$(PackagePath)'=='' ">PackageTmp</PackagePath>
    <EnableAddReplaceToUpdatePackagePath Condition=" '$(EnableAddReplaceToUpdatePackagePath)'=='' ">true</EnableAddReplaceToUpdatePackagePath>

    <PackageDependsOn>
      $(PackageDependsOn);
      AddReplaceRuleForAppPath;
    </PackageDependsOn>
  </PropertyGroup>

  <Target Name="AddReplaceRuleForAppPath" Condition="'$(EnableAddReplaceToUpdatePackagePath)'=='true'">
    <PropertyGroup>
      <_PkgPathFull>$([System.IO.Path]::GetFullPath($(WPPAllFilesInSingleFolder)))</_PkgPathFull>
    </PropertyGroup>

    <!-- escape the text into a regex -->
    <EscapeTextForRegularExpressions Text="$(_PkgPathFull)">
      <Output TaskParameter="Result" PropertyName="_PkgPathRegex" />
    </EscapeTextForRegularExpressions>

    <!-- add the replace rule to update the path -->
    <ItemGroup>
      <MsDeployReplaceRules Include="replaceFullPath">
        <Match>$(_PkgPathRegex)</Match>
        <Replace>$(PackagePath)</Replace>
      </MsDeployReplaceRules>
    </ItemGroup>
  </Target>

  <Target Name="DeleteManifest" AfterTargets="PackageUsingManifest">
    <!-- Remove Web.xyz.SourceManifest.xml from the output directory as we don't need it -->
    <Delete Files="$(PackageSourceManifest)"
            Condition="'$(PackageSourceManifest)' != ''"
            ContinueOnError="true" />
  </Target>


  <Target Name="ReplicateWebModuleAssemblies"
          AfterTargets="CopyFilesToOutputDirectory"
          Condition="'$(SharedDependencyDirectory)' != ''">

    <Message Text="Replicating web assemblies to shared directories" />

    <Copy SourceFiles="@(IntermediateAssembly)"
          DestinationFolder="$(SharedDependencyDirectory)"
          SkipUnchangedFiles="true" />

  </Target>

</Project>