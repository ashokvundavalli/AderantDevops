<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         DefaultTargets="Build"
         ToolsVersion="14.0">

  <Import Project="Aderant.Build.Common.targets" />
  <Import Project="Aderant.Build.Publish.targets" />
  <Import Project="Aderant.CodeSigning.targets" />
  <Import Project="Mobile.targets" />

  <PropertyGroup>
    <RunTestsDependsOn>
      $(RunTestsDependsOn);
      CollectTestAssemblies;
    </RunTestsDependsOn>

    <BuildCoreDependsOn>
      ValidateRequiredProperties;
      RefreshVersionVariables;
      <!--RunTests;
      RunIntegrationTests;
      --><!--RunAutomationTests;--><!--
      PublishModule;
      IndexSourcesAndPublishSymbols;
      MobileBuild;-->
      PostBuild;
      RunBuildExtensions;
      SignInstallers;
      PackageArtifactsCore;
      CreateDependencyLinks;
    </BuildCoreDependsOn>

    <PackageArtifactsDependsOn>
      $(PackageArtifactsDependsOn);
      CreateDefaultArtifacts;
      PackageArtifacts
    </PackageArtifactsDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <SignApplications Condition="'$(SignApplications)' == ''">true</SignApplications>
  </PropertyGroup>

  <!--Stub-->
  <Target Name="PackageArtifacts" />


  <Target Name="RefreshVersionVariables">

    <ItemGroup>
      <_Variables Include="FileVersion" />
      <_Variables Include="AssemblyVersion" />
      <_Variables Include="ModuleName" />
    </ItemGroup>

    <GetOrPutContextVariable
      Scope="$(VariableScopeId)"
      ContextEndpoint="$(ContextEndpoint)"
      VariableName="%(_Variables.Identity)">
      <Output TaskParameter="Value" PropertyName="%(_Variables.Identity)" />
    </GetOrPutContextVariable>

    <Error Text="$(VariableScopeId): FileVersion is undefined" Condition="'$(FileVersion)' == '' And '$(IsDesktopBuild)' != 'true'" />

  </Target>


  <Target Name="CreateDefaultArtifacts">
    <ItemGroup>
      <_PackageArtifact Include="$(BinTestDirectory)\**\*;">
        <ArtifactId>$(ModuleName).default.tests</ArtifactId>
        <Generated>true</Generated>
        <ArtifactType>Prebuilt</ArtifactType>
      </_PackageArtifact>

      <_PackageArtifact Include="$(BinModuleDirectory)\**\*;">
        <ArtifactId>$(ModuleName).default</ArtifactId>
        <Generated>true</Generated>
        <ArtifactType>Prebuilt</ArtifactType>
      </_PackageArtifact>
    </ItemGroup>
  </Target>


  <Target Name="PackageArtifactsCore" DependsOnTargets="$(PackageArtifactsDependsOn)">

    <CreateArtifacts
      ContextEndpoint="$(ContextEndpoint)"
      SolutionRoot="$(SolutionRoot)"
      RelativeFrom="$(BinModuleDirectory);$(BinTestDirectory)"
      ArtifactDefinitions="@(PackageArtifact);@(_PackageArtifact)"
      AssemblyVersion="$(AssemblyVersion)"
      FileVersion="$(FileVersion)" />

  </Target>


  <Target Name="CreateDependencyLinks" Condition="'$(IsDesktopBuild)' == 'true'">

    <CreateDependencyLinks
      SolutionRoot="$(SolutionRoot)"
      ContextEndpoint="$(ContextEndpoint)" />

  </Target>


  <!-- Stub for customizers to override -->
  <Target Name="PostBuild" />


  <Target Name="Build" DependsOnTargets="BuildCore">
  </Target>


  <Target Name="BuildCore" DependsOnTargets="$(BuildCoreDependsOn)">
  </Target>


  <Target Name="ValidateRequiredProperties">
    <Error Condition="'$(SolutionDirectoryPath)' == ''" Text="Fatal error. SolutionDirectoryPath is undefined in element $(ProjectInstanceId)" />
  </Target>


  <!-- TODO: Legacy extension name... replace this -->
  <Target Name="OnAfterBuild" />
  <Target Name="PostBuild" />

  <Target Name="RunBuildExtensions" DependsOnTargets="PostBuild;OnAfterBuild" />

  <!-- Pull the entry targets into our context. This lets us call into PostBuild for people who want to customize the workflow -->
  <Import Project="$(SolutionDirectoryPath)Build\TFSBuild.proj" Condition="Exists('$(SolutionDirectoryPath)Build\TFSBuild.proj')" />
  <Import Project="$(SolutionDirectoryPath)packaging.targets" Condition="Exists('$(SolutionDirectoryPath)packaging.targets')" />

</Project>
