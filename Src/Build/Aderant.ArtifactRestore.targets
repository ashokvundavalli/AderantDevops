<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Target Name="GenerateSharedContentFile">
    <MSBuild Projects="@(SharedContentProducers)"
             Targets="WriteContentFile" />
  </Target>

  <!-- Defines a set of targets for customizing the artifact restore process -->
  <Import Project="$(DirPropFile)" Condition="'$(DirPropFile)' != ''" />

  <ItemGroup Condition="'$(RestorePackagedFilesFromBuildCacheZips)' == 'true'">
    <BuildCacheZipFilesToRestore Include="$(CommonOutputDirectory)\Web.*.zip;$(CommonOutputDirectory)\Aderant.*.Api.zip">
      <ArchivePathToExtract>Content/PackageTmp</ArchivePathToExtract>
      <Destination>$(SolutionRoot)\Src\%(FileName)</Destination>
    </BuildCacheZipFilesToRestore>
  </ItemGroup>

  <Target Name="ExtractBuildCachePackages">
    <CallTarget Targets="RestoreContent" Condition="'@(BuildCacheZipFilesToRestore->Count())' != '0'" />
  </Target>  

  <PropertyGroup>
    <ContentRestoreProcessDependsOn>
      $(ContentRestoreProcessDependsOn);
      ExtractBuildCachePackagesCore;
      GenerateSharedContentFile
    </ContentRestoreProcessDependsOn>
  </PropertyGroup>

  <!-- Uses target batching to run this once per zip -->
  <Target Name="ExtractBuildCachePackagesCore" Condition="'$(IsBuildCacheEnabled)' != 'false'"
          Outputs="%(BuildCacheZipFilesToRestore.Identity)">

    <Error Text="Item does not exist: %(Identity)" Condition="!Exists(%(BuildCacheZipFilesToRestore.FullPath))" />

    <PropertyGroup>
      <_ZipFullPath>%(BuildCacheZipFilesToRestore.FullPath)</_ZipFullPath>
      <_ArchivePathToExtract>%(BuildCacheZipFilesToRestore.ArchivePathToExtract)</_ArchivePathToExtract>
      <_ArchiveDestination>%(BuildCacheZipFilesToRestore.Destination)</_ArchiveDestination>
    </PropertyGroup>

    <!-- 7zip doesn't support rewriting archive paths.
         Web artifacts are packaged using MSDeploy which we customize to put content into a zip entry 'Content\PackageTmp'
         Because we want to extract this file over the top of the source web app that created it we have a problem
         as 7zip would place the content into Content\PackageTmp.
         To workaround this we create a junction to the place we want to extract to.
         This is a performance optimization as it means we don't need to unzip and then merge two directories. -->
    <MakeSymlink
      CreateLinkParent="true"
      Link="$(ModuleBuildTempDirectory)$(_ArchivePathToExtract)"
      Target="%(BuildCacheZipFilesToRestore.Destination)"
      Type="J" />

    <Exec Command='"$(BuildToolsDirectory)7za.exe" x "$(_ZipFullPath)" $(_ArchivePathToExtract) -aos -bd -bb -o$(ModuleBuildTempDirectory)'
          WorkingDirectory="$(SolutionRoot)"
          IgnoreStandardErrorWarningFormat="true"
          YieldDuringToolExecution="true" />

    <RemoveDir Directories="$(ModuleBuildTempDirectory)$(_ArchivePathToExtract)" />

    <ItemGroup>
      <WebAssemblies Include="$(_ArchiveDestination)\bin\Web.*dll" />
    </ItemGroup>

    <!-- Replicate the core compiled asset -->
    <CopyFiles SourceFiles="@(WebAssemblies)"
               DestinationFiles="@(WebAssemblies->'$(AlternativeOutputDirectory)%(RecursiveDir)%(Filename)%(Extension)')"
               UseHardlinks="true" />
  </Target>

  <Target Name="RestoreContent" DependsOnTargets="$(ContentRestoreProcessDependsOn)" />

</Project>